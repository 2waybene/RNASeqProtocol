##=========================================================
##	Standard protocol for kallisto analysis 
##
##	Creditable transcript reference
##	i.e. https://www.gencodegenes.org/human/
##=========================================================


##=========================================
##	Step 1: kallisto installation
##
##	It was installed March, 2021
##=========================================

[li11@ehshpclp134/latimer Kallisto]$ which kallisto 
~/local/bin/kallisto
[li11@ehshpclp134/latimer Kallisto]$ ls -al ~/local/bin/kallisto 
lrwxrwxrwx 1 li11 dirib 42 Mar  2 16:19 /ddn/gs1/home/li11/local/bin/kallisto -> /ddn/gs1/home/li11/tools/kallisto/kallisto
[li11@ehshpclp134/latimer Kallisto]$ ls -al /ddn/gs1/home/li11/tools/kallisto/
total 21859
drwxr-xr-x  3 li11 dirib     4096 Nov  4  2019 .
drwx------ 55 li11 dirib     4096 Mar  2 16:16 ..
-rwxr-xr-x  1 li11 dirib 22375623 Nov  4  2019 kallisto
-rw-r--r--  1 li11 dirib     1357 Mar 20  2017 license.txt
-rw-r--r--  1 li11 dirib     2250 Mar 20  2017 README.md
drwxr-xr-x  2 li11 dirib     4096 Mar  2 16:16 test


##=================================================
##	Step 2: get the referencd transcriptome
##	
##	And, building salmon index proporly
##=================================================

##	Download files from https://www.gencodegenes.org/human
##	Download files from https://www.gencodegenes.org/mouse
##	e.g.
##	ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M26/gencode.vM26.transcripts.fa.gz 
##	All files needed for salmon are:

##========================================================================================================
##	Build human and mouse kallisto index
##
##	kallisto index -i kallistoMM10 gencode.vM23.transcripts.fa
##	kallisto index -i kallistoHG38 gencode.v32.transcripts.fa
##========================================================================================================

##	For example


mm10_kallisto_index=/ddn/gs1/home/li11/refDB/mm10/kallistoIndex/kallistoMM10
hg38_kallisto_index=/ddn/gs1/home/li11/refDB/hg38/kallistoIndex/kallistoHG38




##=========================================================
##     	Build kallisto run with the following 
##	scripts:
##=========================================================

-rw-r--r-- 1 li11 dirib 1224 Feb 25 08:36 buildingKallistoScripts_hg38.sh
-rw-r--r-- 1 li11 dirib 1145 Feb 25 08:34 buildingKallistoScripts_mm10.sh
-rw-r--r-- 1 li11 dirib 2392 Feb 25 08:34 createdKallisto.sh



##===========================================================
##      For any given RNAseq experiment
##      It is recommended to have the following directories
##===========================================================

[li11@ehshpclp134/latimer RNAProj]$ ls -l 
total 2
drwxr-xr-x 2 li11 dirib 4096 Mar  4 20:40 executeScripts
drwxr-xr-x 3 li11 dirib 4096 Feb 25 10:13 rawData
drwxr-xr-x 3 li11 dirib 4096 Feb 25 21:38 results
drwxr-xr-x 2 li11 dirib 4096 Feb 25 21:45 runningScripts

##==============================================================================
rawData: contains all the fastq files
runningScripts: contains script to make executing scripts
executeSripts: contains "salmon script" for a given sample in the experiment
results: contains salmon run for each sample: results/Salmon/
##==============================================================================

##============================================================
##	After successfully run, here are the
##
##	Output folder:
##
##	After Salmon run, there will be a separate folder
##	exampleSample.salmon it contains all the output files
##	
##	ls -l ~/project2019/RNAseqProj/results/Salmon/TR_AG_1_CRRA190004040-1a_HMHVVDSXX_L1.salmon/  
##============================================================




##============================================================
##      Create count datamatrix for downstream 
##	Analysis
##============================================================


##============================================================================
awk -F"\t" '{if ($5 > 0 ) print }'  TR_AG_1_CRRA190004040-1a_HMHVVDSXX_L1.salmon/quant.sf | wc -l 

#	30018
wc -l TR_AG_1_CRRA190004040-1a_HMHVVDSXX_L1.salmon/quant.sf 
#	140749 TR_AG_1_CRRA190004040-1a_HMHVVDSXX_L1.salmon/quant.sf

for k in `ls -d TR_*`; do wc -l $k/quant.sf ; cat $k/quant.sf |  awk -F"\t" '{if ($5 > 0 ) print }' | wc -l;   done;

for k in `ls -d TR_*`; do echo $k/quant.sf ; tail -n +2 $k/quant.sf | cut -f1,5 > "matrix_$k.csv"; done; 

paste matrix_TR_* > mouse_Salmon_matrix.txt 

##=====================================================================
##     Modify the matrix in other software
##     Excel, JMP to exclude missing value, duplicate entries etc.
##=====================================================================


total 6755
drwxr-xr-x 2 li11 dirib    4096 Nov 15  2019 aux_info
-rw-r--r-- 1 li11 dirib     331 Nov 15  2019 cmd_info.json
-rw-r--r-- 1 li11 dirib     518 Nov 15  2019 lib_format_counts.json
drwxr-xr-x 2 li11 dirib    4096 Nov 15  2019 libParams
drwxr-xr-x 2 li11 dirib    4096 Nov 15  2019 logs
-rw-r--r-- 1 li11 dirib 6900271 Nov 15  2019 quant.sf
##	create index

#	salmon index --index mm10_salmon_index  -t  gencode.vM23.transcripts.fa   --gencode  -p 40 & 


##	test run decoy
bash ~/tools/salmon/salmon-latest_linux_x86_64/scripts/generateDecoyTranscriptome.sh -a gencode.vM23.annotation.gff3 -g GRCm38.p6.genome.fa -t gencode.vM23.transcripts.fa -o . &




